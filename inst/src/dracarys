#!/usr/bin/env Rscript

suppressPackageStartupMessages(require(argparser))
suppressPackageStartupMessages(require(glue))
suppressPackageStartupMessages(require(rmarkdown))
suppressPackageStartupMessages(require(R.utils))


p <- arg_parser(
  description = "Play with DRAGEN fire",
  name = "dracarys", hide.opts = TRUE)
p <- add_argument(p,
                  arg = "--name",
                  help = "name of sample")
p <- add_argument(p,
                  arg = "--outdir",
                  help = "output directory",
                  default = "dracarys")
p <- add_argument(p,
                  arg = "--indir",
                  help = "input dir")
argv <- parse_args(p)

name <- argv$name
indir <- normalizePath(argv$indir)
if (!dir.exists(argv$outdir)) {
  dir.create(argv$outdir)
}
outdir <- normalizePath(argv$outdir)

rmd_paths <- function(outdir) {
  rmd_outdir <- file.path(outdir, "rmd")
  rmd_from_pkg <- system.file(
    "rmd/tumor_normal/tumor_normal.Rmd",
    package = "dracarys")
  R.utils::copyDirectory(dirname(rmd_from_pkg), rmd_outdir)
  rmd_infile <- file.path(rmd_outdir, basename(rmd_from_pkg))

  list(rmd_outdir = rmd_outdir, rmd_infile = rmd_infile)
}
rmd <- rmd_paths(outdir)

cat(paste0("[", as.character(Sys.time()), "]"), "START dracarys\n")
cat(glue("indir: {indir}"), sep = "\n")
cat(glue("outdir: {outdir}"), sep = "\n")
cat(glue("name: {name}"), sep = "\n")
cat(glue("rmd: {rmd$rmd_infile}"), sep = "\n")

params_list <- list(
  indir = indir,
  outdir = outdir,
  name = name
)

rmarkdown::render(
  input = rmd$rmd_infile,
  output_file = paste0(name, "_dracarys.html"),
  output_dir = rmd$rmd_outdir,
  params = params_list
)

cat(paste0("[", as.character(Sys.time()), "]", " END dracarys"))
